name: Deploy Dev

on: pull_request

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.26.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev
  TARGET_ENV: dev

jobs:
  ci:
    name: Push to AWS Lambda
    runs-on: ubuntu-20.04
    environment: dev

    steps:
      ### Get environment variables from AWS Parameter Store ###

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: parks-reso-api-dev-gh-action
          role-skip-session-tagging: true

      # API variables
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/s3-bucket"
          env_variable_name: "S3_BUCKET"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/db-name"
          env_variable_name: "DB_NAME"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/gc-notify-api-path"
          env_variable_name: "GC_NOTIFY_API_PATH"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/gc-notify-api-key"
          env_variable_name: "GC_NOTIFY_API_KEY"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/gc-notify-parking-receipt-template-id"
          env_variable_name: "GC_NOTIFY_PARKING_RECEIPT_TEMPLATE_ID"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/gc-notify-trail-receipt-template-id"
          env_variable_name: "GC_NOTIFY_TRAIL_RECEIPT_TEMPLATE_ID"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/gc-notify-cancel-template-id"
          env_variable_name: "GC_NOTIFY_CANCEL_TEMPLATE_ID"
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-api/pass-cancellation-route"
          env_variable_name: "PASS_CANCELLATION_ROUTE"

      # Public variables
      - uses: "marvinpinto/action-inject-ssm-secrets@v1.2.1"
        with:
          ssm_parameter: "/parks-reso-public/url"
          env_variable_name: "PUBLIC_URL"


      ### Upload functions to S3 ###

      - name: Check out the repo
        uses: actions/checkout@v2

      - name: Setup node
        uses: actions/setup-node@v2
        with:
          node-version: 10

      - name: Install packages
        run: |
          cd ./lambda && \
          for d in */ ; do
            cd $d && \
            npm i && \
            cd ..
          done

      - name: Install Zip
        uses: montudor/action-zip@v1

      - name: Make artifact directory
        run: mkdir artifacts

      - name: Zip function directories
        run: |
          cd ./lambda/ && \
          for d in */ ; do
            cd $d && zip -r ../../artifacts/${d::-1}.zip ./ && cd ..
          done
      
      - name: Upload zips to S3
        env:
          s3_bucket: "${{ env.S3_BUCKET }}-${{ env.TARGET_ENV }}"
          dir_name: ${{ github.event.pull_request.number }}
        run: |
          aws s3 sync ./artifacts s3://$s3_bucket/$dir_name/


      ### Run Terragrunt ###

      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          app_version: ${{ github.event.pull_request.number }}
          s3_bucket: ${{ env.S3_BUCKET }}
          db_name: ${{ env.DB_NAME }}
          gc_notify_api_path: ${{ env.GC_NOTIFY_API_PATH }}
          gc_notify_api_key: ${{ env.GC_NOTIFY_API_KEY }}
          gc_notify_parking_receipt_template_id: ${{ env.GC_NOTIFY_PARKING_RECEIPT_TEMPLATE_ID }}
          gc_notify_trail_receipt_template_id: ${{ env.GC_NOTIFY_TRAIL_RECEIPT_TEMPLATE_ID }}
          gc_notify_cancel_template_id: ${{ env.GC_NOTIFY_CANCEL_TEMPLATE_ID }}
          pass_cancellation_route: ${{ env.PASS_CANCELLATION_ROUTE }}
          public_url: ${{ env.PUBLIC_URL }}
        run: terragrunt apply-all --terragrunt-non-interactive