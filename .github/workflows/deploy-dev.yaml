name: Deploy Dev

on:
  push:
    branches: [main]

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.26.7
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev
  TARGET_ENV: dev
  GIT_BRANCH: main

jobs:
  build:
    name: Build and archive Lambda
    runs-on: ubuntu-20.04
    environment: dev

    steps:
      ### Get environment variables from AWS Parameter Store ###

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME_SANDBOX }}
          role-duration-seconds: 900
          role-session-name: parks-reso-api-sandbox-gh-action
          role-skip-session-tagging: true

      ### Upload functions to S3 ###

      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn install --frozen-lockfile

      - run: yarn build

      - name: Upload zips to S3
        run: |
          git_hash=$(git rev-parse --short HEAD)
          aws s3 sync ./artifacts s3://parks-reso-lambda-artifacts/$git_hash/ --exclude "*" --include "*.zip" --delete

      - uses: actions/upload-artifact@v2
        with:
          name: lambda-builds
          path: artifacts/*.zip

  deploy:
    needs: build
    name: Push to AWS Lambda
    runs-on: ubuntu-20.04
    environment: dev
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-duration-seconds: 900
          role-session-name: parks-reso-api-sandbox-dev-action
          role-skip-session-tagging: true

      - name: Git Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: lambda-builds
          path: terraform/src/artifacts

      ### Run Terragrunt ###
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: ${{ env.TF_VERSION }}
          cli_config_credentials_token: ${{ secrets.TFC_TEAM_TOKEN }}

      - uses: peter-murray/terragrunt-github-action@v1.0.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          aws_region: ${{ secrets.AWS_REGION }}
        run: terragrunt apply-all --terragrunt-non-interactive
