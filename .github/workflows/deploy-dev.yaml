name: Deploy Dev

on:
  push:
    branches: [main]

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: dev
  TARGET_ENV: dev
  GIT_BRANCH: main

permissions:
  id-token: write
  contents: read

jobs:
  ci:
    name: Build and Deploy
    runs-on: ubuntu-latest
    environment: dev
    strategy:
      matrix:
        node-version: [16.x]

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      ### Install if no cache exists ###
      - name: Setup node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'yarn'
      - run: yarn install --silent --frozen-lockfile

      ### Build if no cache exists ###
      - name: Cache Build
        id: cache-build
        uses: actions/cache@v3
        with:
          path: |
            **/terraform/src/artifacts
          key: ${{ github.sha }}-artifacts
      - name: Run Build
        if: steps.cache-build.outputs.cache-hit != 'true'
        run: |
          sudo prlimit --pid $$ --nofile=1048576:1048576
          sudo sysctl fs.inotify.max_user_instances=1280
          sudo sysctl fs.inotify.max_user_watches=655360
          yarn build-ci

      ### Get environment variables from AWS Parameter Store ###
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_ARN_TO_USE }}
          role-duration-seconds: 900
          role-session-name: parks-reso-api-sandbox-gh-action
          role-skip-session-tagging: true

      ### Run Terragrunt ###
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.3.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          aws_region: ${{ secrets.AWS_REGION }}
        run: terragrunt apply -auto-approve --terragrunt-non-interactive -var target_aws_account_id=${{ vars.ACCOUNT_ID }} -var target_env=dev
