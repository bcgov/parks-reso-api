name: Deploy Test

run-name: Deploying ${{ github.ref_name }} to test

on:
  push:
    tags:
      - '*'

env:
  TF_VERSION: 0.14.7
  TG_VERSION: 0.37.1
  TG_SRC_PATH: terraform
  TFC_WORKSPACE: test
  TARGET_ENV: test

permissions:
  id-token: write
  contents: read

jobs:
  ci:
    name: Push to AWS Lambda
    runs-on: ubuntu-latest
    environment: test

    steps:
      - name: Attempt to checkout tag
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref_name }}

      - name: Tag not found
        if: ${{ failure() }}
        run: |
          echo "::error::Git Tag not found, please double check input"
          exit 1

      # Get artifacts from cache
      - name: Restore cached artifacts
        uses: actions/cache/restore@v3
        with:
          path: |
            **/terraform/src/artifacts
          key: ${{ github.sha }}-artifacts

      ### Get environment variables from AWS Parameter Store ###
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1-node16
        with:
          aws-region: ${{ secrets.AWS_REGION }}
          role-to-assume: ${{ vars.AWS_ROLE_ARN_TO_USE }}
          role-duration-seconds: 900
          role-session-name: parks-reso-api-sandbox-gh-action
          role-skip-session-tagging: true

      ### Run Terragrunt ###
      - name: Setup terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Setup Terragrunt
        uses: autero1/action-terragrunt@v1.3.0
        with:
          terragrunt_version: ${{ env.TG_VERSION }}

      - name: Terragrunt Apply
        working-directory: ${{ env.TG_SRC_PATH }}/${{ env.TFC_WORKSPACE }}
        env:
          aws_region: ${{ secrets.AWS_REGION }}
        run: terragrunt apply -auto-approve --terragrunt-non-interactive -var target_aws_account_id=${{ vars.ACCOUNT_ID }} -var target_env=test
