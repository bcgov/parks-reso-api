service: parks-reso-api

frameworkVersion: '3'

provider:
  name: aws
  runtime: nodejs14.x
  stage: api
  region: ca-central-1

package:
  individually: true
  exclude:
    - '**/*'

plugins:
  - serverless-offline
  - serverless-plugin-include-dependencies
  - serverless-dotenv-plugin

functions:
  ###########
  # captcha
  ###########
  generateCaptcha:
    handler: lambda/captcha/handler.generateCaptcha
    package:
      include:
        - lambda/captcha/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /captcha
          cors: true
  verifyCaptcha:
    handler: lambda/captcha/handler.verifyAnswer
    package:
      include:
        - lambda/captcha/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /captcha/verify
          cors: true
  generateCaptchaAudio:
    handler: lambda/captcha/handler.generateAudio
    package:
      include:
        - lambda/captcha/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /captcha/audio
          cors: true
  cloudwatchAlarm:
    handler: lambda/cloudwatchAlarm/index.handler
    package:
      include:
        - lambda/cloudwatchAlarm/**
        - node_modules/**
        - lambda/*.js

  ###########
  # config
  ###########
  readConfig:
    handler: lambda/readConfig/index.handler
    package:
      include:
        - lambda/readConfig/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /config
          cors: true
  writeConfig:
    handler: lambda/writeConfig/index.handler
    package:
      include:
        - lambda/writeConfig/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /config
          cors: true

  ###########
  # park
  ###########
  readPark:
    handler: lambda/readPark/index.handler
    package:
      include:
        - lambda/readPark/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /park
          cors: true
  writePark:
    handler: lambda/writePark/index.handler
    package:
      include:
        - lambda/writePark/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /park
          cors: true
      - http:
          method: PUT
          path: /park
          cors: true

  ###########
  # Facility
  ###########
  readFacility:
    handler: lambda/readFacility/index.handler
    package:
      include:
        - lambda/readFacility/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /facility
          cors: true
  writeFacility:
    handler: lambda/writeFacility/index.handler
    package:
      include:
        - lambda/writeFacility/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /facility
          cors: true
      - http:
          method: PUT
          path: /facility
          cors: true

  ###########
  # Reservations
  ###########
  readReservation:
    handler: lambda/readReservation/index.handler
    package:
      include:
        - lambda/readReservation/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /reservation
          cors: true

  ###########
  # Modifiers
  ###########
  writeModifier:
    handler: lambda/writeModifier/index.handler
    package:
      include:
        - lambda/writeModifier/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: PUT
          path: /modifier
          cors: true

  ###########
  # Pass
  ###########
  readPass:
    handler: lambda/readPass/index.handler
    package:
      include:
        - lambda/readPass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /pass
          cors: true
  writePass:
    handler: lambda/writePass/index.handler
    package:
      include:
        - lambda/writePass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: POST
          path: /pass
          cors: true
  putPass:
    handler: lambda/writePass/index.handler
    package:
      include:
        - lambda/writePass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: PUT
          path: /pass
          cors: true
  deletePass:
    handler: lambda/deletePass/index.handler
    package:
      include:
        - lambda/deletePass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: DELETE
          path: /pass
          cors: true

  ###########
  # SQS Processor
  ###########
  sqsProcessor:
    handler: lambda/sqsProcessor/index.handler
    package:
      include:
        - lambda/sqsProcessor/**
        - node_modules/**
        - lambda/*.js

  ###########
  # Export
  ###########
  exportPass:
    handler: lambda/exportPass/index.handler
    package:
      include:
        - lambda/exportPass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /export-pass
          cors: true

  exportAllPassInvokable:
    handler: lambda/exportAllPass/invokable/index.handler
    package:
      include:
        - lambda/exportAllPass/**
        - node_modules/**
        - lambda/*.js

  exportAllPassGet:
    handler: lambda/exportAllPass/GET/index.handler
    package:
      include:
        - lambda/exportAllPass/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /export-all-pass
          cors: true

  ###########
  # Metric TODO -delete
  ###########
  metric:
    handler: lambda/metric/index.handler
    package:
      include:
        - lambda/metric/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /metric
          cors: true

  ###########
  # Metrics
  ###########
  readMetrics:
    handler: lambda/readMetrics/index.handler
    package:
      include:
        - lambda/readMetrics/**
        - node_modules/**
        - lambda/*.js
    events:
      - http:
          method: GET
          path: /metrics
          cors: true

  ###########
  # Jobs
  ###########
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-checkActivation
  checkActivation:
    handler: lambda/checkActivation/index.handler
    package:
      include:
        - lambda/checkActivation/**
        - node_modules/**
        - lambda/*.js
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-checkExpiry
  checkExpiry:
    handler: lambda/checkExpiry/index.handler
    package:
      include:
        - lambda/checkExpiry/**
        - node_modules/**
        - lambda/*.js
  warmUp:
    handler: lambda/warmUp/index.handler
    package:
      patterns:
        - lambda/warmUp/worker.js
        - node_modules/**
        - lambda/*.js
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-sendReminder
  sendReminder:
    handler: lambda/sendReminder/index.handler
    package:
      include:
        - lambda/sendReminder/**
        - node_modules/**
        - lambda/*.js
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-sendSurvey
  sendSurvey:
    handler: lambda/sendSurvey/index.handler
    package:
      include:
        - lambda/sendSurvey/**
        - node_modules/**
        - lambda/*.js
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-writeMetrics
  writeMetrics:
    handler: lambda/writeMetrics/index.handler
    package:
      include:
        - lambda/writeMetrics/**
        - node_modules/**
        - lambda/*.js
  # aws lambda invoke /dev/null --endpoint-url http://localhost:3002 --function-name parks-reso-api-api-updateParkName
  updateParkName:
    handler: lambda/updateParkName/index.handler
    package:
      include:
        - lambda/updateParkName/**
        - node_modules/**
        - lambda/*.js

custom:
  dynamodb:
    stages:
      - api
    start:
      host: localhost
      port: 8000
      noStart: true
      seed: true
      migrate: true

resources:
  Resources:
    bcprsCampingTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        TableName: parksreso
        AttributeDefinitions:
          - AttributeName: pk
            AttributeType: S
          - AttributeName: sk
            AttributeType: S
          - AttributeName: shortPassDate
            AttributeType: S
          - AttributeName: facilityName
            AttributeType: S
          - AttributeName: passStatus
            AttributeType: S
        KeySchema:
          - AttributeName: pk
            KeyType: HASH
          - AttributeName: sk
            KeyType: RANGE
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        GlobalSecondaryIndexes:
          - IndexName: passStatus-index
            KeySchema:
              - AttributeName: passStatus
                KeyType: HASH
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - type
                - facilityName
                - date
                - pk
                - sk
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: manualLookup-index
            KeySchema:
              - AttributeName: shortPassDate
                KeyType: HASH
              - AttributeName: facilityName
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - email
                - firstName
                - lastName
                - pk
                - registrationNumber
                - searchFirstName
                - searchLastName
                - sk
                - passStatus
                - checkedIn
                - checkedInTime
                - date
                - type
                - numberOfGuests
                - phoneNumber
                - facilityType
                - license
                - creationDate
                - isOverbooked
                - parkName
                - park
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
          - IndexName: shortPassDate-index
            KeySchema:
              - AttributeName: shortPassDate
                KeyType: HASH
              - AttributeName: facilityName
                KeyType: RANGE
            Projection:
              ProjectionType: INCLUDE
              NonKeyAttributes:
                - firstName
                - searchFirstName
                - lastName
                - searchLastName
                - facilityName
                - email
                - date
                - shortPassDate
                - type
                - registrationNumber
                - numberOfGuests
                - passStatus
                - phoneNumber
                - facilityType
                - license
                - creationDate
                - isOverbooked
                - parkName
                - pk
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
